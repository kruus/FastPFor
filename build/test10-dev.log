Test run 1
# pretty name = simdbinarypacking
# added 'SIMDBinaryPacking+VariableByte'
# found uniformdynamic
# sparse uniform data generation...
# generated 1024 arrays
# their size is  32768
#SIMDBinaryPacking+VariableByte	
# for each scheme we give compression speed (million int./s) decompression speed and bits per integer
14	1350	1703	17.01		
# generated 32 arrays
# their size is  1048576
#SIMDBinaryPacking+VariableByte	
# for each scheme we give compression speed (million int./s) decompression speed and bits per integer
9	1345	1517	12.04		
# generated 1 arrays
# their size is  33554432
#SIMDBinaryPacking+VariableByte	
# for each scheme we give compression speed (million int./s) decompression speed and bits per integer
4	1357	1662	7.031		
# building summary 
###################
#test 1 of 3
#wall clock (delta mis, comp mis, decomp mis, idelta mis, bits per int)
#
#SIMDBinaryPacking+VariableByte           	 -1 	 1350 	 1703 	 -1 	 17.01
#
#
###################
#test 2 of 3
#wall clock (delta mis, comp mis, decomp mis, idelta mis, bits per int)
#
#SIMDBinaryPacking+VariableByte           	 -1 	 1345 	 1517 	 -1 	 12.04
#
#
###################
#test 3 of 3
#wall clock (delta mis, comp mis, decomp mis, idelta mis, bits per int)
#
#SIMDBinaryPacking+VariableByte           	 -1 	 1357 	 1662 	 -1 	 7.031
#
#
Test run 2
# pretty name = simdbinarypacking
# added 'SIMDBinaryPacking+VariableByte'
# found uniformdynamic
# sparse uniform data generation...
# generated 1024 arrays
# their size is  32768
#SIMDBinaryPacking+VariableByte	
# for each scheme we give compression speed (million int./s) decompression speed and bits per integer
14	1413	1629	17.02		
# generated 32 arrays
# their size is  1048576
#SIMDBinaryPacking+VariableByte	
# for each scheme we give compression speed (million int./s) decompression speed and bits per integer
9	1326	1464	12.04		
# generated 1 arrays
# their size is  33554432
#SIMDBinaryPacking+VariableByte	
# for each scheme we give compression speed (million int./s) decompression speed and bits per integer
4	1373	1661	7.031		
# building summary 
###################
#test 1 of 3
#wall clock (delta mis, comp mis, decomp mis, idelta mis, bits per int)
#
#SIMDBinaryPacking+VariableByte           	 -1 	 1413 	 1629 	 -1 	 17.02
#
#
###################
#test 2 of 3
#wall clock (delta mis, comp mis, decomp mis, idelta mis, bits per int)
#
#SIMDBinaryPacking+VariableByte           	 -1 	 1326 	 1464 	 -1 	 12.04
#
#
###################
#test 3 of 3
#wall clock (delta mis, comp mis, decomp mis, idelta mis, bits per int)
#
#SIMDBinaryPacking+VariableByte           	 -1 	 1373 	 1661 	 -1 	 7.031
#
#
Test run 3
# pretty name = simdbinarypacking
# added 'SIMDBinaryPacking+VariableByte'
# found uniformdynamic
# sparse uniform data generation...
# generated 1024 arrays
# their size is  32768
#SIMDBinaryPacking+VariableByte	
# for each scheme we give compression speed (million int./s) decompression speed and bits per integer
14	1374	1635	17.01		
# generated 32 arrays
# their size is  1048576
#SIMDBinaryPacking+VariableByte	
# for each scheme we give compression speed (million int./s) decompression speed and bits per integer
9	1273	1337	12.04		
# generated 1 arrays
# their size is  33554432
#SIMDBinaryPacking+VariableByte	
# for each scheme we give compression speed (million int./s) decompression speed and bits per integer
4	1365	1670	7.032		
# building summary 
###################
#test 1 of 3
#wall clock (delta mis, comp mis, decomp mis, idelta mis, bits per int)
#
#SIMDBinaryPacking+VariableByte           	 -1 	 1374 	 1635 	 -1 	 17.01
#
#
###################
#test 2 of 3
#wall clock (delta mis, comp mis, decomp mis, idelta mis, bits per int)
#
#SIMDBinaryPacking+VariableByte           	 -1 	 1273 	 1337 	 -1 	 12.04
#
#
###################
#test 3 of 3
#wall clock (delta mis, comp mis, decomp mis, idelta mis, bits per int)
#
#SIMDBinaryPacking+VariableByte           	 -1 	 1365 	 1670 	 -1 	 7.032
#
#
Test run 4
# pretty name = simdbinarypacking
# added 'SIMDBinaryPacking+VariableByte'
# found uniformdynamic
# sparse uniform data generation...
# generated 1024 arrays
# their size is  32768
#SIMDBinaryPacking+VariableByte	
# for each scheme we give compression speed (million int./s) decompression speed and bits per integer
14	1344	1646	17.01		
# generated 32 arrays
# their size is  1048576
#SIMDBinaryPacking+VariableByte	
# for each scheme we give compression speed (million int./s) decompression speed and bits per integer
9	1250	1426	12.04		
# generated 1 arrays
# their size is  33554432
#SIMDBinaryPacking+VariableByte	
# for each scheme we give compression speed (million int./s) decompression speed and bits per integer
4	1410	1712	7.031		
# building summary 
###################
#test 1 of 3
#wall clock (delta mis, comp mis, decomp mis, idelta mis, bits per int)
#
#SIMDBinaryPacking+VariableByte           	 -1 	 1344 	 1646 	 -1 	 17.01
#
#
###################
#test 2 of 3
#wall clock (delta mis, comp mis, decomp mis, idelta mis, bits per int)
#
#SIMDBinaryPacking+VariableByte           	 -1 	 1250 	 1426 	 -1 	 12.04
#
#
###################
#test 3 of 3
#wall clock (delta mis, comp mis, decomp mis, idelta mis, bits per int)
#
#SIMDBinaryPacking+VariableByte           	 -1 	 1410 	 1712 	 -1 	 7.031
#
#
Test run 5
# pretty name = simdbinarypacking
# added 'SIMDBinaryPacking+VariableByte'
# found uniformdynamic
# sparse uniform data generation...
# generated 1024 arrays
# their size is  32768
#SIMDBinaryPacking+VariableByte	
# for each scheme we give compression speed (million int./s) decompression speed and bits per integer
14	1343	1620	17.01		
# generated 32 arrays
# their size is  1048576
#SIMDBinaryPacking+VariableByte	
# for each scheme we give compression speed (million int./s) decompression speed and bits per integer
9	1156	1338	12.04		
# generated 1 arrays
# their size is  33554432
#SIMDBinaryPacking+VariableByte	
# for each scheme we give compression speed (million int./s) decompression speed and bits per integer
4	1404	1695	7.031		
# building summary 
###################
#test 1 of 3
#wall clock (delta mis, comp mis, decomp mis, idelta mis, bits per int)
#
#SIMDBinaryPacking+VariableByte           	 -1 	 1343 	 1620 	 -1 	 17.01
#
#
###################
#test 2 of 3
#wall clock (delta mis, comp mis, decomp mis, idelta mis, bits per int)
#
#SIMDBinaryPacking+VariableByte           	 -1 	 1156 	 1338 	 -1 	 12.04
#
#
###################
#test 3 of 3
#wall clock (delta mis, comp mis, decomp mis, idelta mis, bits per int)
#
#SIMDBinaryPacking+VariableByte           	 -1 	 1404 	 1695 	 -1 	 7.031
#
#
Test run 6
# pretty name = simdbinarypacking
# added 'SIMDBinaryPacking+VariableByte'
# found uniformdynamic
# sparse uniform data generation...
# generated 1024 arrays
# their size is  32768
#SIMDBinaryPacking+VariableByte	
# for each scheme we give compression speed (million int./s) decompression speed and bits per integer
14	1384	1602	17.01		
# generated 32 arrays
# their size is  1048576
#SIMDBinaryPacking+VariableByte	
# for each scheme we give compression speed (million int./s) decompression speed and bits per integer
9	1331	1461	12.04		
# generated 1 arrays
# their size is  33554432
#SIMDBinaryPacking+VariableByte	
# for each scheme we give compression speed (million int./s) decompression speed and bits per integer
4	1379	1662	7.031		
# building summary 
###################
#test 1 of 3
#wall clock (delta mis, comp mis, decomp mis, idelta mis, bits per int)
#
#SIMDBinaryPacking+VariableByte           	 -1 	 1384 	 1602 	 -1 	 17.01
#
#
###################
#test 2 of 3
#wall clock (delta mis, comp mis, decomp mis, idelta mis, bits per int)
#
#SIMDBinaryPacking+VariableByte           	 -1 	 1331 	 1461 	 -1 	 12.04
#
#
###################
#test 3 of 3
#wall clock (delta mis, comp mis, decomp mis, idelta mis, bits per int)
#
#SIMDBinaryPacking+VariableByte           	 -1 	 1379 	 1662 	 -1 	 7.031
#
#
Test run 7
# pretty name = simdbinarypacking
# added 'SIMDBinaryPacking+VariableByte'
# found uniformdynamic
# sparse uniform data generation...
# generated 1024 arrays
# their size is  32768
#SIMDBinaryPacking+VariableByte	
# for each scheme we give compression speed (million int./s) decompression speed and bits per integer
14	1363	1480	17.01		
# generated 32 arrays
# their size is  1048576
#SIMDBinaryPacking+VariableByte	
# for each scheme we give compression speed (million int./s) decompression speed and bits per integer
9	1371	1480	12.04		
# generated 1 arrays
# their size is  33554432
#SIMDBinaryPacking+VariableByte	
# for each scheme we give compression speed (million int./s) decompression speed and bits per integer
4	1356	1670	7.032		
# building summary 
###################
#test 1 of 3
#wall clock (delta mis, comp mis, decomp mis, idelta mis, bits per int)
#
#SIMDBinaryPacking+VariableByte           	 -1 	 1363 	 1480 	 -1 	 17.01
#
#
###################
#test 2 of 3
#wall clock (delta mis, comp mis, decomp mis, idelta mis, bits per int)
#
#SIMDBinaryPacking+VariableByte           	 -1 	 1371 	 1480 	 -1 	 12.04
#
#
###################
#test 3 of 3
#wall clock (delta mis, comp mis, decomp mis, idelta mis, bits per int)
#
#SIMDBinaryPacking+VariableByte           	 -1 	 1356 	 1670 	 -1 	 7.032
#
#
Test run 8
# pretty name = simdbinarypacking
# added 'SIMDBinaryPacking+VariableByte'
# found uniformdynamic
# sparse uniform data generation...
# generated 1024 arrays
# their size is  32768
#SIMDBinaryPacking+VariableByte	
# for each scheme we give compression speed (million int./s) decompression speed and bits per integer
14	1326	1654	17.02		
# generated 32 arrays
# their size is  1048576
#SIMDBinaryPacking+VariableByte	
# for each scheme we give compression speed (million int./s) decompression speed and bits per integer
9	1151	1283	12.04		
# generated 1 arrays
# their size is  33554432
#SIMDBinaryPacking+VariableByte	
# for each scheme we give compression speed (million int./s) decompression speed and bits per integer
4	1235	1431	7.031		
# building summary 
###################
#test 1 of 3
#wall clock (delta mis, comp mis, decomp mis, idelta mis, bits per int)
#
#SIMDBinaryPacking+VariableByte           	 -1 	 1326 	 1654 	 -1 	 17.02
#
#
###################
#test 2 of 3
#wall clock (delta mis, comp mis, decomp mis, idelta mis, bits per int)
#
#SIMDBinaryPacking+VariableByte           	 -1 	 1151 	 1283 	 -1 	 12.04
#
#
###################
#test 3 of 3
#wall clock (delta mis, comp mis, decomp mis, idelta mis, bits per int)
#
#SIMDBinaryPacking+VariableByte           	 -1 	 1235 	 1431 	 -1 	 7.031
#
#
Test run 9
# pretty name = simdbinarypacking
# added 'SIMDBinaryPacking+VariableByte'
# found uniformdynamic
# sparse uniform data generation...
# generated 1024 arrays
# their size is  32768
#SIMDBinaryPacking+VariableByte	
# for each scheme we give compression speed (million int./s) decompression speed and bits per integer
14	1215	1394	17.01		
# generated 32 arrays
# their size is  1048576
#SIMDBinaryPacking+VariableByte	
# for each scheme we give compression speed (million int./s) decompression speed and bits per integer
9	1229	1297	12.04		
# generated 1 arrays
# their size is  33554432
#SIMDBinaryPacking+VariableByte	
# for each scheme we give compression speed (million int./s) decompression speed and bits per integer
4	1340	1621	7.031		
# building summary 
###################
#test 1 of 3
#wall clock (delta mis, comp mis, decomp mis, idelta mis, bits per int)
#
#SIMDBinaryPacking+VariableByte           	 -1 	 1215 	 1394 	 -1 	 17.01
#
#
###################
#test 2 of 3
#wall clock (delta mis, comp mis, decomp mis, idelta mis, bits per int)
#
#SIMDBinaryPacking+VariableByte           	 -1 	 1229 	 1297 	 -1 	 12.04
#
#
###################
#test 3 of 3
#wall clock (delta mis, comp mis, decomp mis, idelta mis, bits per int)
#
#SIMDBinaryPacking+VariableByte           	 -1 	 1340 	 1621 	 -1 	 7.031
#
#
Test run 10
# pretty name = simdbinarypacking
# added 'SIMDBinaryPacking+VariableByte'
# found uniformdynamic
# sparse uniform data generation...
# generated 1024 arrays
# their size is  32768
#SIMDBinaryPacking+VariableByte	
# for each scheme we give compression speed (million int./s) decompression speed and bits per integer
14	1338	1622	17.01		
# generated 32 arrays
# their size is  1048576
#SIMDBinaryPacking+VariableByte	
# for each scheme we give compression speed (million int./s) decompression speed and bits per integer
9	1348	1494	12.04		
# generated 1 arrays
# their size is  33554432
#SIMDBinaryPacking+VariableByte	
# for each scheme we give compression speed (million int./s) decompression speed and bits per integer
4	1372	1665	7.031		
# building summary 
###################
#test 1 of 3
#wall clock (delta mis, comp mis, decomp mis, idelta mis, bits per int)
#
#SIMDBinaryPacking+VariableByte           	 -1 	 1338 	 1622 	 -1 	 17.01
#
#
###################
#test 2 of 3
#wall clock (delta mis, comp mis, decomp mis, idelta mis, bits per int)
#
#SIMDBinaryPacking+VariableByte           	 -1 	 1348 	 1494 	 -1 	 12.04
#
#
###################
#test 3 of 3
#wall clock (delta mis, comp mis, decomp mis, idelta mis, bits per int)
#
#SIMDBinaryPacking+VariableByte           	 -1 	 1372 	 1665 	 -1 	 7.031
#
#
