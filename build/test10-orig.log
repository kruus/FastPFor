Test run 1
# pretty name = simdbinarypacking
# added 'SIMDBinaryPacking+VariableByte'
# found uniformdynamic
# sparse uniform data generation...
# generated 1024 arrays
# their size is  32768
#SIMDBinaryPacking+VariableByte	
# for each scheme we give compression speed (million int./s) decompression speed and bits per integer
14	1286	1702	17.02		
# generated 32 arrays
# their size is  1048576
#SIMDBinaryPacking+VariableByte	
# for each scheme we give compression speed (million int./s) decompression speed and bits per integer
9	1288	1544	12.04		
# generated 1 arrays
# their size is  33554432
#SIMDBinaryPacking+VariableByte	
# for each scheme we give compression speed (million int./s) decompression speed and bits per integer
4	1269	1578	7.031		
# building summary 
###################
#test 1 of 3
#wall clock (delta mis, comp mis, decomp mis, idelta mis, bits per int)
#
#SIMDBinaryPacking+VariableByte           	 -1 	 1286 	 1702 	 -1 	 17.02
#
#
###################
#test 2 of 3
#wall clock (delta mis, comp mis, decomp mis, idelta mis, bits per int)
#
#SIMDBinaryPacking+VariableByte           	 -1 	 1288 	 1544 	 -1 	 12.04
#
#
###################
#test 3 of 3
#wall clock (delta mis, comp mis, decomp mis, idelta mis, bits per int)
#
#SIMDBinaryPacking+VariableByte           	 -1 	 1269 	 1578 	 -1 	 7.031
#
#
Test run 2
# pretty name = simdbinarypacking
# added 'SIMDBinaryPacking+VariableByte'
# found uniformdynamic
# sparse uniform data generation...
# generated 1024 arrays
# their size is  32768
#SIMDBinaryPacking+VariableByte	
# for each scheme we give compression speed (million int./s) decompression speed and bits per integer
14	1205	1663	17.01		
# generated 32 arrays
# their size is  1048576
#SIMDBinaryPacking+VariableByte	
# for each scheme we give compression speed (million int./s) decompression speed and bits per integer
9	1223	1457	12.04		
# generated 1 arrays
# their size is  33554432
#SIMDBinaryPacking+VariableByte	
# for each scheme we give compression speed (million int./s) decompression speed and bits per integer
4	1293	1634	7.03		
# building summary 
###################
#test 1 of 3
#wall clock (delta mis, comp mis, decomp mis, idelta mis, bits per int)
#
#SIMDBinaryPacking+VariableByte           	 -1 	 1205 	 1663 	 -1 	 17.01
#
#
###################
#test 2 of 3
#wall clock (delta mis, comp mis, decomp mis, idelta mis, bits per int)
#
#SIMDBinaryPacking+VariableByte           	 -1 	 1223 	 1457 	 -1 	 12.04
#
#
###################
#test 3 of 3
#wall clock (delta mis, comp mis, decomp mis, idelta mis, bits per int)
#
#SIMDBinaryPacking+VariableByte           	 -1 	 1293 	 1634 	 -1 	 7.03
#
#
Test run 3
# pretty name = simdbinarypacking
# added 'SIMDBinaryPacking+VariableByte'
# found uniformdynamic
# sparse uniform data generation...
# generated 1024 arrays
# their size is  32768
#SIMDBinaryPacking+VariableByte	
# for each scheme we give compression speed (million int./s) decompression speed and bits per integer
14	1210	1689	17.02		
# generated 32 arrays
# their size is  1048576
#SIMDBinaryPacking+VariableByte	
# for each scheme we give compression speed (million int./s) decompression speed and bits per integer
9	1232	1482	12.04		
# generated 1 arrays
# their size is  33554432
#SIMDBinaryPacking+VariableByte	
# for each scheme we give compression speed (million int./s) decompression speed and bits per integer
4	1297	1655	7.032		
# building summary 
###################
#test 1 of 3
#wall clock (delta mis, comp mis, decomp mis, idelta mis, bits per int)
#
#SIMDBinaryPacking+VariableByte           	 -1 	 1210 	 1689 	 -1 	 17.02
#
#
###################
#test 2 of 3
#wall clock (delta mis, comp mis, decomp mis, idelta mis, bits per int)
#
#SIMDBinaryPacking+VariableByte           	 -1 	 1232 	 1482 	 -1 	 12.04
#
#
###################
#test 3 of 3
#wall clock (delta mis, comp mis, decomp mis, idelta mis, bits per int)
#
#SIMDBinaryPacking+VariableByte           	 -1 	 1297 	 1655 	 -1 	 7.032
#
#
Test run 4
# pretty name = simdbinarypacking
# added 'SIMDBinaryPacking+VariableByte'
# found uniformdynamic
# sparse uniform data generation...
# generated 1024 arrays
# their size is  32768
#SIMDBinaryPacking+VariableByte	
# for each scheme we give compression speed (million int./s) decompression speed and bits per integer
14	1213	1613	17.02		
# generated 32 arrays
# their size is  1048576
#SIMDBinaryPacking+VariableByte	
# for each scheme we give compression speed (million int./s) decompression speed and bits per integer
9	1235	1496	12.04		
# generated 1 arrays
# their size is  33554432
#SIMDBinaryPacking+VariableByte	
# for each scheme we give compression speed (million int./s) decompression speed and bits per integer
4	1304	1648	7.031		
# building summary 
###################
#test 1 of 3
#wall clock (delta mis, comp mis, decomp mis, idelta mis, bits per int)
#
#SIMDBinaryPacking+VariableByte           	 -1 	 1213 	 1613 	 -1 	 17.02
#
#
###################
#test 2 of 3
#wall clock (delta mis, comp mis, decomp mis, idelta mis, bits per int)
#
#SIMDBinaryPacking+VariableByte           	 -1 	 1235 	 1496 	 -1 	 12.04
#
#
###################
#test 3 of 3
#wall clock (delta mis, comp mis, decomp mis, idelta mis, bits per int)
#
#SIMDBinaryPacking+VariableByte           	 -1 	 1304 	 1648 	 -1 	 7.031
#
#
Test run 5
# pretty name = simdbinarypacking
# added 'SIMDBinaryPacking+VariableByte'
# found uniformdynamic
# sparse uniform data generation...
# generated 1024 arrays
# their size is  32768
#SIMDBinaryPacking+VariableByte	
# for each scheme we give compression speed (million int./s) decompression speed and bits per integer
14	1273	1609	17.01		
# generated 32 arrays
# their size is  1048576
#SIMDBinaryPacking+VariableByte	
# for each scheme we give compression speed (million int./s) decompression speed and bits per integer
9	1255	1462	12.04		
# generated 1 arrays
# their size is  33554432
#SIMDBinaryPacking+VariableByte	
# for each scheme we give compression speed (million int./s) decompression speed and bits per integer
4	1351	1708	7.03		
# building summary 
###################
#test 1 of 3
#wall clock (delta mis, comp mis, decomp mis, idelta mis, bits per int)
#
#SIMDBinaryPacking+VariableByte           	 -1 	 1273 	 1609 	 -1 	 17.01
#
#
###################
#test 2 of 3
#wall clock (delta mis, comp mis, decomp mis, idelta mis, bits per int)
#
#SIMDBinaryPacking+VariableByte           	 -1 	 1255 	 1462 	 -1 	 12.04
#
#
###################
#test 3 of 3
#wall clock (delta mis, comp mis, decomp mis, idelta mis, bits per int)
#
#SIMDBinaryPacking+VariableByte           	 -1 	 1351 	 1708 	 -1 	 7.03
#
#
Test run 6
# pretty name = simdbinarypacking
# added 'SIMDBinaryPacking+VariableByte'
# found uniformdynamic
# sparse uniform data generation...
# generated 1024 arrays
# their size is  32768
#SIMDBinaryPacking+VariableByte	
# for each scheme we give compression speed (million int./s) decompression speed and bits per integer
14	1290	1702	17.01		
# generated 32 arrays
# their size is  1048576
#SIMDBinaryPacking+VariableByte	
# for each scheme we give compression speed (million int./s) decompression speed and bits per integer
9	1238	1440	12.04		
# generated 1 arrays
# their size is  33554432
#SIMDBinaryPacking+VariableByte	
# for each scheme we give compression speed (million int./s) decompression speed and bits per integer
4	1344	1701	7.03		
# building summary 
###################
#test 1 of 3
#wall clock (delta mis, comp mis, decomp mis, idelta mis, bits per int)
#
#SIMDBinaryPacking+VariableByte           	 -1 	 1290 	 1702 	 -1 	 17.01
#
#
###################
#test 2 of 3
#wall clock (delta mis, comp mis, decomp mis, idelta mis, bits per int)
#
#SIMDBinaryPacking+VariableByte           	 -1 	 1238 	 1440 	 -1 	 12.04
#
#
###################
#test 3 of 3
#wall clock (delta mis, comp mis, decomp mis, idelta mis, bits per int)
#
#SIMDBinaryPacking+VariableByte           	 -1 	 1344 	 1701 	 -1 	 7.03
#
#
Test run 7
# pretty name = simdbinarypacking
# added 'SIMDBinaryPacking+VariableByte'
# found uniformdynamic
# sparse uniform data generation...
# generated 1024 arrays
# their size is  32768
#SIMDBinaryPacking+VariableByte	
# for each scheme we give compression speed (million int./s) decompression speed and bits per integer
14	1288	1700	17.01		
# generated 32 arrays
# their size is  1048576
#SIMDBinaryPacking+VariableByte	
# for each scheme we give compression speed (million int./s) decompression speed and bits per integer
9	1275	1541	12.04		
# generated 1 arrays
# their size is  33554432
#SIMDBinaryPacking+VariableByte	
# for each scheme we give compression speed (million int./s) decompression speed and bits per integer
4	1336	1689	7.032		
# building summary 
###################
#test 1 of 3
#wall clock (delta mis, comp mis, decomp mis, idelta mis, bits per int)
#
#SIMDBinaryPacking+VariableByte           	 -1 	 1288 	 1700 	 -1 	 17.01
#
#
###################
#test 2 of 3
#wall clock (delta mis, comp mis, decomp mis, idelta mis, bits per int)
#
#SIMDBinaryPacking+VariableByte           	 -1 	 1275 	 1541 	 -1 	 12.04
#
#
###################
#test 3 of 3
#wall clock (delta mis, comp mis, decomp mis, idelta mis, bits per int)
#
#SIMDBinaryPacking+VariableByte           	 -1 	 1336 	 1689 	 -1 	 7.032
#
#
Test run 8
# pretty name = simdbinarypacking
# added 'SIMDBinaryPacking+VariableByte'
# found uniformdynamic
# sparse uniform data generation...
# generated 1024 arrays
# their size is  32768
#SIMDBinaryPacking+VariableByte	
# for each scheme we give compression speed (million int./s) decompression speed and bits per integer
14	1256	1644	17.02		
# generated 32 arrays
# their size is  1048576
#SIMDBinaryPacking+VariableByte	
# for each scheme we give compression speed (million int./s) decompression speed and bits per integer
9	1244	1472	12.04		
# generated 1 arrays
# their size is  33554432
#SIMDBinaryPacking+VariableByte	
# for each scheme we give compression speed (million int./s) decompression speed and bits per integer
4	1348	1565	7.031		
# building summary 
###################
#test 1 of 3
#wall clock (delta mis, comp mis, decomp mis, idelta mis, bits per int)
#
#SIMDBinaryPacking+VariableByte           	 -1 	 1256 	 1644 	 -1 	 17.02
#
#
###################
#test 2 of 3
#wall clock (delta mis, comp mis, decomp mis, idelta mis, bits per int)
#
#SIMDBinaryPacking+VariableByte           	 -1 	 1244 	 1472 	 -1 	 12.04
#
#
###################
#test 3 of 3
#wall clock (delta mis, comp mis, decomp mis, idelta mis, bits per int)
#
#SIMDBinaryPacking+VariableByte           	 -1 	 1348 	 1565 	 -1 	 7.031
#
#
Test run 9
# pretty name = simdbinarypacking
# added 'SIMDBinaryPacking+VariableByte'
# found uniformdynamic
# sparse uniform data generation...
# generated 1024 arrays
# their size is  32768
#SIMDBinaryPacking+VariableByte	
# for each scheme we give compression speed (million int./s) decompression speed and bits per integer
14	1259	1652	17.02		
# generated 32 arrays
# their size is  1048576
#SIMDBinaryPacking+VariableByte	
# for each scheme we give compression speed (million int./s) decompression speed and bits per integer
9	1283	1484	12.04		
# generated 1 arrays
# their size is  33554432
#SIMDBinaryPacking+VariableByte	
# for each scheme we give compression speed (million int./s) decompression speed and bits per integer
4	1294	1700	7.031		
# building summary 
###################
#test 1 of 3
#wall clock (delta mis, comp mis, decomp mis, idelta mis, bits per int)
#
#SIMDBinaryPacking+VariableByte           	 -1 	 1259 	 1652 	 -1 	 17.02
#
#
###################
#test 2 of 3
#wall clock (delta mis, comp mis, decomp mis, idelta mis, bits per int)
#
#SIMDBinaryPacking+VariableByte           	 -1 	 1283 	 1484 	 -1 	 12.04
#
#
###################
#test 3 of 3
#wall clock (delta mis, comp mis, decomp mis, idelta mis, bits per int)
#
#SIMDBinaryPacking+VariableByte           	 -1 	 1294 	 1700 	 -1 	 7.031
#
#
Test run 10
# pretty name = simdbinarypacking
# added 'SIMDBinaryPacking+VariableByte'
# found uniformdynamic
# sparse uniform data generation...
# generated 1024 arrays
# their size is  32768
#SIMDBinaryPacking+VariableByte	
# for each scheme we give compression speed (million int./s) decompression speed and bits per integer
14	1210	1626	17.01		
# generated 32 arrays
# their size is  1048576
#SIMDBinaryPacking+VariableByte	
# for each scheme we give compression speed (million int./s) decompression speed and bits per integer
9	1283	1549	12.04		
# generated 1 arrays
# their size is  33554432
#SIMDBinaryPacking+VariableByte	
# for each scheme we give compression speed (million int./s) decompression speed and bits per integer
4	1260	1585	7.03		
# building summary 
###################
#test 1 of 3
#wall clock (delta mis, comp mis, decomp mis, idelta mis, bits per int)
#
#SIMDBinaryPacking+VariableByte           	 -1 	 1210 	 1626 	 -1 	 17.01
#
#
###################
#test 2 of 3
#wall clock (delta mis, comp mis, decomp mis, idelta mis, bits per int)
#
#SIMDBinaryPacking+VariableByte           	 -1 	 1283 	 1549 	 -1 	 12.04
#
#
###################
#test 3 of 3
#wall clock (delta mis, comp mis, decomp mis, idelta mis, bits per int)
#
#SIMDBinaryPacking+VariableByte           	 -1 	 1260 	 1585 	 -1 	 7.03
#
#
