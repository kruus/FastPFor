# pretty name = BP32
# added 'BP32+VariableByte'
# pretty name = copy
# added 'JustCopy'
# pretty name = fastbinarypacking16
# added 'FastBinaryPacking16+VariableByte'
# pretty name = fastbinarypacking32
# added 'FastBinaryPacking32+VariableByte'
# pretty name = fastbinarypacking8
# added 'FastBinaryPacking8+VariableByte'
# pretty name = fastpfor
# added 'FastPFor+VariableByte'
# pretty name = newpfor
# added 'NewPFor<4,Simple16>+VariableByte'
# pretty name = optpfor
# added 'OPTPFor<4,Simple16>+VariableByte'
# pretty name = pfor
# added 'PFor+VariableByte'
# pretty name = pfor2008
# added 'PFor2008+VariableByte'
# pretty name = simdbinarypacking
# added 'SIMDBinaryPacking+VariableByte'
# pretty name = simdfastpfor
# added 'SIMDFastPFor+VariableByte'
# pretty name = simple8b
# added 'Simple8b'
# pretty name = simplepfor
# added 'SimplePFor+VariableByte'
# pretty name = varintg8iu
# added 'VarIntG8IU'
# pretty name = vbyte
# added 'VariableByte'
# pretty name = vsencoding
# added 'VSEncoding'
# found uniformdynamic
# sparse uniform data generation...
# generated 1024 arrays
# their size is  32768
#BP32+VariableByte	JustCopy	FastBinaryPacking16+VariableByte	FastBinaryPacking32+VariableByte	FastBinaryPacking8+VariableByte	FastPFor+VariableByte	NewPFor<4,Simple16>+VariableByte	OPTPFor<4,Simple16>+VariableByte	PFor+VariableByte	PFor2008+VariableByte	SIMDBinaryPacking+VariableByte	SIMDFastPFor+VariableByte	Simple8b	SimplePFor+VariableByte	VarIntG8IU	VariableByte	VSEncoding	
# for each scheme we give compression speed (million int./s) decompression speed and bits per integer
14	854.8	1169	16.7		1258	1540	32		622.4	905.7	17.01		818.6	1168	16.7		439.4	626.2	17.55		186.3	1201	16.32		58.9	1236	16.58		3.376	1053	16.57		150.3	1512	16.84		127.4	1489	16.84		1279	1697	17.01		189.3	1414	16.32		219.3	481.2	18.21		186.1	1192	16.28		136.2	773.6	18.37		194.9	158	18.88		9.332	630	18.17		
# generated 32 arrays
# their size is  1048576
#BP32+VariableByte	JustCopy	FastBinaryPacking16+VariableByte	FastBinaryPacking32+VariableByte	FastBinaryPacking8+VariableByte	FastPFor+VariableByte	NewPFor<4,Simple16>+VariableByte	OPTPFor<4,Simple16>+VariableByte	PFor+VariableByte	PFor2008+VariableByte	SIMDBinaryPacking+VariableByte	SIMDFastPFor+VariableByte	Simple8b	SimplePFor+VariableByte	VarIntG8IU	VariableByte	VSEncoding	
# for each scheme we give compression speed (million int./s) decompression speed and bits per integer
9	819.5	1005	11.7		1190	1452	32		560.3	775.1	12.32		778.6	968.1	11.7		405.2	609.4	13.01		178.4	935.1	11.32		69.81	804.1	11.53		5.152	591.2	11.24		150.8	1155	12.26		128.9	1107	12.22		1255	1485	12.04		188.3	1293	11.32		260.2	618.2	11.87		181.9	914.4	11.27		79.43	817.6	15.16		277	221.8	14.24		8.653	663.9	12.31		
# generated 1 arrays
# their size is  33554432
#BP32+VariableByte	JustCopy	FastBinaryPacking16+VariableByte	FastBinaryPacking32+VariableByte	FastBinaryPacking8+VariableByte	FastPFor+VariableByte	NewPFor<4,Simple16>+VariableByte	OPTPFor<4,Simple16>+VariableByte	PFor+VariableByte	PFor2008+VariableByte	SIMDBinaryPacking+VariableByte	SIMDFastPFor+VariableByte	Simple8b	SimplePFor+VariableByte	VarIntG8IU	VariableByte	VSEncoding	
# for each scheme we give compression speed (million int./s) decompression speed and bits per integer
4	843.3	1032	6.686		1197	1455	32		509.4	693.6	6.989		707.5	872.4	6.686		362.7	568.3	8.915		188.3	967.5	6.313		105	877.4	6.521		10.37	600.4	6.24		145.3	1144	7.261		126.4	1100	7.261		1299	1557	7.032		188.5	1365	6.317		315.4	814.2	6.438		186.1	857.6	6.265		180.4	957.6	9.001		694.2	567.1	8.003		8.501	666.3	7.217		
# building summary 
###################
#test 1 of 3
#wall clock (delta mis, comp mis, decomp mis, idelta mis, bits per int)
#
#BP32+VariableByte                        	 -1 	 854.8 	 1169 	 -1 	 16.7
#JustCopy                                 	 -1 	 1258 	 1540 	 -1 	 32
#FastBinaryPacking16+VariableByte         	 -1 	 622.4 	 905.7 	 -1 	 17.01
#FastBinaryPacking32+VariableByte         	 -1 	 818.6 	 1168 	 -1 	 16.7
#FastBinaryPacking8+VariableByte          	 -1 	 439.4 	 626.2 	 -1 	 17.55
#FastPFor+VariableByte                    	 -1 	 186.3 	 1201 	 -1 	 16.32
#NewPFor<4,Simple16>+VariableByte         	 -1 	 58.9 	 1236 	 -1 	 16.58
#OPTPFor<4,Simple16>+VariableByte         	 -1 	 3.376 	 1053 	 -1 	 16.57
#PFor+VariableByte                        	 -1 	 150.3 	 1512 	 -1 	 16.84
#PFor2008+VariableByte                    	 -1 	 127.4 	 1489 	 -1 	 16.84
#SIMDBinaryPacking+VariableByte           	 -1 	 1279 	 1697 	 -1 	 17.01
#SIMDFastPFor+VariableByte                	 -1 	 189.3 	 1414 	 -1 	 16.32
#Simple8b                                 	 -1 	 219.3 	 481.2 	 -1 	 18.21
#SimplePFor+VariableByte                  	 -1 	 186.1 	 1192 	 -1 	 16.28
#VarIntG8IU                               	 -1 	 136.2 	 773.6 	 -1 	 18.37
#VariableByte                             	 -1 	 194.9 	 158 	 -1 	 18.88
#VSEncoding                               	 -1 	 9.332 	 630 	 -1 	 18.17
#
#
###################
#test 2 of 3
#wall clock (delta mis, comp mis, decomp mis, idelta mis, bits per int)
#
#BP32+VariableByte                        	 -1 	 819.5 	 1005 	 -1 	 11.7
#JustCopy                                 	 -1 	 1190 	 1452 	 -1 	 32
#FastBinaryPacking16+VariableByte         	 -1 	 560.3 	 775.1 	 -1 	 12.32
#FastBinaryPacking32+VariableByte         	 -1 	 778.6 	 968.1 	 -1 	 11.7
#FastBinaryPacking8+VariableByte          	 -1 	 405.2 	 609.4 	 -1 	 13.01
#FastPFor+VariableByte                    	 -1 	 178.4 	 935.1 	 -1 	 11.32
#NewPFor<4,Simple16>+VariableByte         	 -1 	 69.81 	 804.1 	 -1 	 11.53
#OPTPFor<4,Simple16>+VariableByte         	 -1 	 5.152 	 591.2 	 -1 	 11.24
#PFor+VariableByte                        	 -1 	 150.8 	 1155 	 -1 	 12.26
#PFor2008+VariableByte                    	 -1 	 128.9 	 1107 	 -1 	 12.22
#SIMDBinaryPacking+VariableByte           	 -1 	 1255 	 1485 	 -1 	 12.04
#SIMDFastPFor+VariableByte                	 -1 	 188.3 	 1293 	 -1 	 11.32
#Simple8b                                 	 -1 	 260.2 	 618.2 	 -1 	 11.87
#SimplePFor+VariableByte                  	 -1 	 181.9 	 914.4 	 -1 	 11.27
#VarIntG8IU                               	 -1 	 79.43 	 817.6 	 -1 	 15.16
#VariableByte                             	 -1 	 277 	 221.8 	 -1 	 14.24
#VSEncoding                               	 -1 	 8.653 	 663.9 	 -1 	 12.31
#
#
###################
#test 3 of 3
#wall clock (delta mis, comp mis, decomp mis, idelta mis, bits per int)
#
#BP32+VariableByte                        	 -1 	 843.3 	 1032 	 -1 	 6.686
#JustCopy                                 	 -1 	 1197 	 1455 	 -1 	 32
#FastBinaryPacking16+VariableByte         	 -1 	 509.4 	 693.6 	 -1 	 6.989
#FastBinaryPacking32+VariableByte         	 -1 	 707.5 	 872.4 	 -1 	 6.686
#FastBinaryPacking8+VariableByte          	 -1 	 362.7 	 568.3 	 -1 	 8.915
#FastPFor+VariableByte                    	 -1 	 188.3 	 967.5 	 -1 	 6.313
#NewPFor<4,Simple16>+VariableByte         	 -1 	 105 	 877.4 	 -1 	 6.521
#OPTPFor<4,Simple16>+VariableByte         	 -1 	 10.37 	 600.4 	 -1 	 6.24
#PFor+VariableByte                        	 -1 	 145.3 	 1144 	 -1 	 7.261
#PFor2008+VariableByte                    	 -1 	 126.4 	 1100 	 -1 	 7.261
#SIMDBinaryPacking+VariableByte           	 -1 	 1299 	 1557 	 -1 	 7.032
#SIMDFastPFor+VariableByte                	 -1 	 188.5 	 1365 	 -1 	 6.317
#Simple8b                                 	 -1 	 315.4 	 814.2 	 -1 	 6.438
#SimplePFor+VariableByte                  	 -1 	 186.1 	 857.6 	 -1 	 6.265
#VarIntG8IU                               	 -1 	 180.4 	 957.6 	 -1 	 9.001
#VariableByte                             	 -1 	 694.2 	 567.1 	 -1 	 8.003
#VSEncoding                               	 -1 	 8.501 	 666.3 	 -1 	 7.217
#
#
# pretty name = copy
# added 'JustCopy'
# pretty name = snappy
# added 'JustCopy'
# found uniformdynamic
# sparse uniform data generation...
# generated 1024 arrays
# their size is  32768
#JustCopy	JustCopy	
# for each scheme we give compression speed (million int./s) decompression speed and bits per integer
14	1226	1499	32		1236	1515	32		
